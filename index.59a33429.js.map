{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,mEAOmBC,SAASC,eAAe,iBAO9BC,QAAUC,eAAgBC,GACnCA,EAAEC,iBACF,MAAMC,EAAcN,SAASC,eAAe,sBACtCM,EAAAC,QAAaC,OAAO,CAACC,KAAMJ,EAAYK,MAAMC,KAAK,IAM5D,WACI,MAAMC,EAAiBb,SAASc,uBAAuB,cACvD,IAAK,MAAMC,KAAiBF,EAC1BE,EAAcb,QAAUC,eAAgBa,GACtC,MAAMC,EAAUD,EAAGE,cAAcC,aAAa,iBAExCC,QAAiBtB,EAAAU,QAAWa,gBAAgBJ,GAGlDK,EAAAd,QAAmBC,OAAOW,EAASG,MAEnC,IAAIC,EAAkBxB,SAASC,eAAe,sBAC5CwB,EAAgBzB,SAASC,eAAe,gBAExCyB,EAAoBC,aAAaC,QAAQ,iBACzCC,EAAgB,GACdH,IACFG,EAAgBC,KAAKC,MAAML,IAG7BF,EAAgBQ,YAAc,GAAGC,EAAAC,eAAe1B,qBAEhD,IAAK,MAAO2B,GAAAC,KAAOP,EAEdO,IAAOC,SAASpB,KACjBO,EAAgBc,UAAUC,IAAI,UAC9Bf,EAAgBQ,YAAc,GAAGC,EAAAC,eAAeM,4BAKtD,IAAIC,EAAmBd,aAAaC,QAAQ,gBAExCc,EAAe,GACbD,IACFC,EAAeZ,KAAKC,MAAMU,IAG5BhB,EAAcO,YAAc,GAAGC,EAAAC,eAAe1B,oBAE9C,IAAK,MAAO2B,GAAAQ,KAAOD,EAEdC,IAAON,SAASpB,KACjBQ,EAAca,UAAUC,IAAI,UAC5Bd,EAAcO,YAAc,GAAGC,EAAAC,eAAeM,2BAKpDhB,EAAgBtB,QAAU,SAAUE,GAIlC,IAAIwC,EAAY,CACdT,GAAIf,EAASG,KAAKY,GAClBU,YAAazB,EAASG,KAAKsB,YAC3BC,eAAgB1B,EAASG,KAAKuB,eAC9BC,aAAc3B,EAASG,KAAKwB,aAC5BC,UAAW5B,EAASG,KAAK0B,OAAOC,KAAIC,GAAKA,EAAEhB,KAC3CiB,aAAchC,EAASG,KAAK6B,cAI1BC,EAAQ,EACZ,IAAI,MAAMlB,GAACA,KAAON,EAAc,CAC9B,GAAGM,IAAOS,EAAUT,GAGlB,OAFAN,EAAcyB,OAAOD,QACrB1B,aAAa4B,QAAQ,gBAAiBzB,KAAK0B,UAAU3B,IAGvDwB,G,CAGFxB,EAAc4B,KAAKb,GACnBxC,EAAEc,cAAcc,YAAc,GAAGC,EAAAC,eAAeM,mBAChDb,aAAa4B,QAAQ,gBAAiBzB,KAAK0B,UAAU3B,G,EAMvDJ,EAAcvB,QAAU,SAAUE,GAEhC,IAAIwC,EAAY,CACdT,GAAIf,EAASG,KAAKY,GAClBU,YAAazB,EAASG,KAAKsB,YAC3BC,eAAgB1B,EAASG,KAAKuB,eAC9BC,aAAc3B,EAASG,KAAKwB,aAC5BC,UAAW5B,EAASG,KAAK0B,OAAOC,KAAIC,GAAKA,EAAEhB,KAC3CiB,aAAchC,EAASG,KAAK6B,cAI1BC,EAAQ,EACZ,IAAI,MAAMlB,GAACA,KAAOO,EAAa,CAC7B,GAAGP,IAAOS,EAAUT,GAGlB,OAFAO,EAAaY,OAAOD,QACpB1B,aAAa4B,QAAQ,eAAgBzB,KAAK0B,UAAUd,IAGtDW,G,CAIFX,EAAae,KAAKb,GAClBjB,aAAa4B,QAAQ,eAAgBzB,KAAK0B,UAAUd,G,GA9GxDgB,E","sources":["src/js/search.js"],"sourcesContent":["import MovieDbApi from './api';\nimport renderSearch from './renderSearch';\nimport renderMovieDetails from './renderMovieDetails';\nimport renderPagination from './renderPagination';\nimport { CONTENT_KEYS } from './config';\nimport { DETAILS_OPTION } from './config';\n\nlet searchButton = document.getElementById('search-button');\n// async call for API\n\n\n//  capture the search texts\n//  call search API with search texts\n//  render the  results in the page\nsearchButton.onclick = async function (e) {\n    e.preventDefault();\n    const searchField = document.getElementById('search-input');\n    await renderSearch.render({text: searchField.value,page:1});\n    setupMovieCardOnClick();\n    // document.getElementById('pagination').innerHTML = '';\n    \n}\n\nfunction setupMovieCardOnClick() {\n    const movieCardLinks = document.getElementsByClassName(\"movie-card\");\n    for (const movieCardLink of movieCardLinks) {\n      movieCardLink.onclick = async function (ev) {\n        const movieId = ev.currentTarget.getAttribute(\"data-movie-id\");\n        //  call movie api to get details of movieId\n        const response = await MovieDbApi.getMovieDetails(movieId);\n        // console.log(response);\n        //  pass the response of the movie details api to RenderMovieDetails\n        renderMovieDetails.render(response.data);\n\n        let addToWatchedBtn = document.getElementById('add-to-watched-btn');\n      let addToQueueBtn = document.getElementById('add-to-q-btn');\n\n      let watchedMoviesText = localStorage.getItem(\"watchedMovies\");\n      let watchedMovies = [];\n        if (watchedMoviesText) {\n          watchedMovies = JSON.parse(watchedMoviesText);\n        }\n\n        addToWatchedBtn.textContent = `${DETAILS_OPTION.default} TO WATCHED`;\n\n        for (const {id} of watchedMovies) {\n          // console.log(parseInt(movieId));\n          if(id === parseInt(movieId)){\n            addToWatchedBtn.classList.add('active');\n            addToWatchedBtn.textContent = `${DETAILS_OPTION.remove} FROM WATCHED LIST`;\n          }\n        }\n\n\n      let queuedMoviesText = localStorage.getItem(\"queuedMovies\");\n\n      let queuedMovies = [];\n        if (queuedMoviesText) {\n          queuedMovies = JSON.parse(queuedMoviesText);\n        }\n\n        addToQueueBtn.textContent = `${DETAILS_OPTION.default} TO QUEUED`;\n\n        for (const {id} of queuedMovies) {\n          // console.log(parseInt(movieId));\n          if(id === parseInt(movieId)){\n            addToQueueBtn.classList.add('active');\n            addToQueueBtn.textContent = `${DETAILS_OPTION.remove} FROM QUEUED LIST`;\n          }\n        }\n     \n\n      addToWatchedBtn.onclick = function (e) {\n\n        // get item if it exists in localStorage\n\n        let movieInfo = {\n          id: response.data.id,\n          poster_path: response.data.poster_path,\n          original_title: response.data.original_title,\n          vote_average: response.data.vote_average,\n          genre_ids: response.data.genres.map(g => g.id),\n          release_date: response.data.release_date\n\n        }\n\n        let index = 0;\n        for(const {id} of watchedMovies){\n          if(id === movieInfo.id){\n            watchedMovies.splice(index);\n            localStorage.setItem('watchedMovies', JSON.stringify(watchedMovies));\n            return;\n          }\n          index++;\n        }\n\n        watchedMovies.push(movieInfo);\n        e.currentTarget.textContent = `${DETAILS_OPTION.remove} TO QUEUED`;\n        localStorage.setItem('watchedMovies', JSON.stringify(watchedMovies));\n        // console.log(watchedMovies);\n      }\n\n\n\n      addToQueueBtn.onclick = function (e) {\n\n        let movieInfo = {\n          id: response.data.id,\n          poster_path: response.data.poster_path,\n          original_title: response.data.original_title,\n          vote_average: response.data.vote_average,\n          genre_ids: response.data.genres.map(g => g.id),\n          release_date: response.data.release_date\n\n        }\n\n        let index = 0;\n        for(const {id} of queuedMovies){\n          if(id === movieInfo.id){\n            queuedMovies.splice(index);\n            localStorage.setItem('queuedMovies', JSON.stringify(queuedMovies));\n            return;\n          }\n          index++;\n        }\n\n\n        queuedMovies.push(movieInfo);\n        localStorage.setItem('queuedMovies', JSON.stringify(queuedMovies));\n      }\n    };\n  }\n}\n\n\n\n"],"names":["$7rYDH","parcelRequire","document","getElementById","onclick","async","e","preventDefault","searchField","$gPPQV","default","render","text","value","page","movieCardLinks","getElementsByClassName","movieCardLink","ev","movieId","currentTarget","getAttribute","response","getMovieDetails","$kDUSD","data","addToWatchedBtn","addToQueueBtn","watchedMoviesText","localStorage","getItem","watchedMovies","JSON","parse","textContent","$kwJfa","DETAILS_OPTION","id","id2","parseInt","classList","add","remove","queuedMoviesText","queuedMovies","id1","movieInfo","poster_path","original_title","vote_average","genre_ids","genres","map","g","release_date","index","splice","setItem","stringify","push","$b18fd23e9761f35d$var$setupMovieCardOnClick"],"version":3,"file":"index.59a33429.js.map"}